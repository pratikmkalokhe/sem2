Q.1] Construct an Android app that toggles a light bulb ON and OFF when the user clicks on toggle button.


MainActivity.java :

package com.example.slip12q1;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;
import android.widget.ToggleButton;


public class MainActivity extends AppCompatActivity {
    ToggleButton toggleButton;
    ImageView imageView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        toggleButton=(ToggleButton) findViewById(R.id.toggleButton);
        imageView=(ImageView) findViewById(R.id.imageView);

        imageView.setImageDrawable(getResources().getDrawable(R.drawable.lightoff));
        toggleButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(toggleButton.isChecked())
                {
                    imageView.setImageDrawable(getResources().getDrawable(R.drawable.lighton));
                }
                else
                {
                    imageView.setImageDrawable(getResources().getDrawable(R.drawable.lightoff));
                }
            }
        });
    }
}


activity_main.xml :

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <ToggleButton
        android:id="@+id/toggleButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="ToggleButton"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.498"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.882" />

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="1295dp"
        android:layout_height="1523dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.526" />
</androidx.constraintlayout.widget.ConstraintLayout>


selector.xml :

<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:state_checked="true" android:drawable="@drawable/ic_power_on"/>
    <item android:state_checked="false" android:drawable="@drawable/ic_power_settings_new_black_24dp"/>

</selector>




Q.2] Create an Android application which will ask the user to input his / her name. A message should display the two items concatenated in a label. Change the format of the label using radio buttons and check boxes for selection. The user can make the label text bold, underlined or italic as well as change its color. Also include buttons to display the message in the label, clear the text boxes as well as label. Finally exit.


MainActivity.java :

package com.example.slip5q2;

import androidx.appcompat.app.AppCompatActivity;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Typeface;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    private EditText nameEditText;
    private TextView labelTextView;
    private RadioButton labelFormatNormal, labelFormatBold, labelFormatItalic, labelFormatUnderline;
    private CheckBox labelColorCheckBox;
    private Button displayMessageButton, clearButton, exitButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        nameEditText = findViewById(R.id.nameEditText);
        labelTextView = findViewById(R.id.labelTextView);
        labelFormatNormal = findViewById(R.id.labelFormatNormal);
        labelFormatBold = findViewById(R.id.labelFormatBold);
        labelFormatItalic = findViewById(R.id.labelFormatItalic);
        labelFormatUnderline = findViewById(R.id.labelFormatUnderline);
        labelColorCheckBox = findViewById(R.id.labelColorCheckBox);
        displayMessageButton = findViewById(R.id.displayMessageButton);
        clearButton = findViewById(R.id.clearButton);
        exitButton = findViewById(R.id.exitButton);

        // Set default label format
        labelFormatNormal.setChecked(true);

        // Set up label color checkbox
        labelColorCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    labelTextView.setTextColor(Color.BLUE);
                } else {
                    labelTextView.setTextColor(Color.BLACK);
                }
            }
        });

        // Set up display message button
        displayMessageButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String name = nameEditText.getText().toString();
                if (name.isEmpty()) {
                    Toast.makeText(MainActivity.this, "Please enter your name", Toast.LENGTH_SHORT).show();
                    return;
                }

                String labelFormat = "";
                if (labelFormatBold.isChecked()) {
                    labelTextView.setTypeface(Typeface.defaultFromStyle(Typeface.BOLD));
                }
                if (labelFormatItalic.isChecked()) {
                    labelTextView.setTypeface(Typeface.defaultFromStyle(Typeface.ITALIC));
                }
                if (labelFormatUnderline.isChecked()) {
                    labelTextView.setPaintFlags(labelTextView.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
                }

                if (labelFormatBold.isChecked() && labelFormatItalic.isChecked()) {
                    labelTextView.setTypeface(Typeface.defaultFromStyle(Typeface.BOLD_ITALIC));
                }
                labelTextView.setText(String.format("%s ", name));
            }
        });

        // Set up clear button
        clearButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                nameEditText.setText("");
                labelTextView.setText("");
                labelFormatNormal.setChecked(true);
                labelColorCheckBox.setChecked(false);
            }
        });

        // Set up exit button
        exitButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }
}


activity_main.xml :

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/nameEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter your name" />

    <RadioGroup
        android:id="@+id/labelFormatRadioGroup"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:orientation="horizontal">

        <RadioButton
            android:id="@+id/labelFormatNormal"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Normal" />

        <RadioButton
            android:id="@+id/labelFormatBold"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Bold" />

        <RadioButton
            android:id="@+id/labelFormatItalic"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Italic" />

        <RadioButton
            android:id="@+id/labelFormatUnderline"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Underline" />
    </RadioGroup>

    <CheckBox
        android:id="@+id/labelColorCheckBox"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:text="Change color" />

    <TextView
        android:id="@+id/labelTextView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:layout_marginTop="16dp"
        android:text=""
        android:textSize="18sp" />

    <Button
        android:id="@+id/displayMessageButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:text="Display message" />

    <Button
        android:id="@+id/clearButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:text="Clear" />

    <Button
        android:id="@+id/exitButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:text="Exit" />
</LinearLayout>